---
# GNU General Public License v3.0+ (see LICENSES/GPL-3.0-or-later.txt or https://www.gnu.org/licenses/gpl-3.0.txt)
# SPDX-License-Identifier: GPL-3.0-or-later
# SPDX-FileCopyrightText: 2020, Felix Fontein

- name: Create account keys
  community.crypto.openssl_privatekey:
    path: "{{ output_dir }}/account-{{ item.name }}.pem"
    type: "{{ item.type }}"
    curve: "{{ item.curve | default(omit) }}"
    size: "{{ item.size | default(omit) }}"
    state: present
  loop:
    - name: ec256
      type: ECC
      curve: secp256r1
    - name: ec384
      type: ECC
      curve: secp384r1
    - name: rsa2048
      type: RSA
      size: 2048

- name: Create ACME accounts
  community.crypto.acme_account:
    account_key: "{{ output_dir }}/account-{{ item }}.pem"
    acme_version: "{{ acme_certificate_acme_version }}"
    acme_directory: "{{ acme_certificate_acme_directory }}"
    allow_creation: true
    state: present
    terms_agreed: true
    validate_certs: "{{ acme_certificate_validate_certs }}"
  loop:
    - ec256
    - ec384
    - rsa2048
  register: accounts

- name: Store account URIs
  ansible.builtin.set_fact:
    account_uris:
      ec265: "{{ accounts.results[0].account_uri }}"
      ec384: "{{ accounts.results[1].account_uri }}"
      rsa2048: "{{ accounts.results[2].account_uri }}"

###############################################################################

- name: Run role
  ansible.builtin.include_role:
    name: felixfontein.acme.acme_certificate
  vars:
    acme_certificate_domains:
      - 'example.org'
    acme_certificate_acme_account: "{{ output_dir }}/account-ec256.pem"
    acme_certificate_root_certificate: http://{{ acme_host }}:5000/root-certificate-for-ca/0

- name: Retrieve certificate information
  community.crypto.x509_certificate_info:
    path: "{{ acme_certificate_keys_path }}example.org.pem"
  register: cert

- name: Validate certificate information
  ansible.builtin.assert:
    that:
      - cert.subject_alt_name | length == 1
      - "'DNS:example.org' in cert.subject_alt_name"

- name: Validate certificate
  ansible.builtin.command:
    argv:
      - openssl
      - verify
      - "-no-CAfile"
      - "-no-CApath"
      - "-CAfile"
      - "{{ output_dir }}/acme-root-0.pem"
      - "-untrusted"
      - "{{ acme_certificate_keys_path }}example.org-chain.pem"
      - "{{ acme_certificate_keys_path }}example.org.pem"
  changed_when: false

- name: Run role
  ansible.builtin.include_role:
    name: felixfontein.acme.acme_certificate
  vars:
    acme_certificate_domains:
      - '*.example.com'
      - 'example.com'
    acme_certificate_challenge: dns-01
    acme_certificate_acme_account_content: "{{ lookup('ansible.builtin.file', output_dir ~ '/account-rsa2048.pem') }}"
    acme_certificate_root_certificate: http://{{ acme_host }}:5000/root-certificate-for-ca/0
    acme_certificate_renewal_on_remaining_days: 1

- name: Retrieve certificate information
  community.crypto.x509_certificate_info:
    path: "{{ acme_certificate_keys_path }}_.example.com.pem"
  register: cert

- name: Validate certificate information
  ansible.builtin.assert:
    that:
      - cert.subject_alt_name | length == 2
      - "'DNS:*.example.com' in cert.subject_alt_name"
      - "'DNS:example.com' in cert.subject_alt_name"

- name: Validate certificate
  ansible.builtin.command:
    argv:
      - openssl
      - verify
      - "-no-CAfile"
      - "-no-CApath"
      - "-CAfile"
      - "{{ output_dir }}/acme-root-0.pem"
      - "-untrusted"
      - "{{ acme_certificate_keys_path }}_.example.com-chain.pem"
      - "{{ acme_certificate_keys_path }}_.example.com.pem"
  changed_when: false

- name: Run role
  ansible.builtin.include_role:
    name: felixfontein.acme.acme_certificate
  vars:
    acme_certificate_ips:
      - 127.0.0.1
    acme_certificate_acme_account_content: "{{ lookup('ansible.builtin.file', output_dir ~ '/account-rsa2048.pem') }}"
    acme_certificate_root_certificate: http://{{ acme_host }}:5000/root-certificate-for-ca/0

- name: Retrieve certificate information
  community.crypto.x509_certificate_info:
    path: "{{ acme_certificate_keys_path }}127.0.0.1.pem"
  register: cert

- name: Validate certificate information
  ansible.builtin.assert:
    that:
      - cert.subject_alt_name | length == 1
      - "'IP:127.0.0.1' in cert.subject_alt_name"

- name: Validate certificate
  ansible.builtin.command:
    argv:
      - openssl
      - verify
      - "-no-CAfile"
      - "-no-CApath"
      - "-CAfile"
      - "{{ output_dir }}/acme-root-0.pem"
      - "-untrusted"
      - "{{ acme_certificate_keys_path }}127.0.0.1-chain.pem"
      - "{{ acme_certificate_keys_path }}127.0.0.1.pem"
  changed_when: false

- name: Recursively collect information on all files in the keys path
  community.internal_test_tools.files_collect:
    directories:
      - path: "{{ acme_certificate_keys_path }}"
  register: acme_keys_path_state

- name: Run role again (should not renew)
  ansible.builtin.include_role:
    name: felixfontein.acme.acme_certificate
  vars:
    acme_certificate_domains:
      - '*.example.com'
      - 'example.com'
    acme_certificate_challenge: dns-01
    acme_certificate_acme_account_content: "{{ lookup('ansible.builtin.file', output_dir ~ '/account-rsa2048.pem') }}"
    acme_certificate_root_certificate: http://{{ acme_host }}:5000/root-certificate-for-ca/0
    acme_certificate_renewal_on_remaining_days: 1

- name: Assert that no file changed in the keys path
  community.internal_test_tools.files_diff:
    state: "{{ acme_keys_path_state }}"
    fail_on_diffs: true
  diff: true
